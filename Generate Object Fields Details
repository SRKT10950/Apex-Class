String objectName='Lead_Product__c'; //Object name to generate field details
              String query = 'SELECT QualifiedApiName, DataType, Label FROM FieldDefinition WHERE EntityDefinition.QualifiedApiName = :objectName';
              List<Schema.SObjectField> fields = Schema.getGlobalDescribe().get(objectName).getDescribe().fields.getMap().values();
              List<List<String>> excelData = new List<List<String>>();
              excelData.add(new List<String>{'Field Name', 'Data Type', 'API Name','Required', 'Editable', 'Updateable','Length','Default Value','PickList'});
              for (Schema.SObjectField field : fields) {
                Schema.DescribeFieldResult fieldDescribe = field.getDescribe();
                if(!fieldDescribe.isAutoNumber() && !fieldDescribe.isCalculated()){
                  String picklist = '';
                  for(Schema.PicklistEntry ple :fieldDescribe.getPicklistValues()){
                    picklist +=ple.getValue()+';';
                    }
                  excelData.add(new List<String>{
                    fieldDescribe.getLabel(),
                    String.valueOf(fieldDescribe.getType()),
                    fieldDescribe.getName(),
                    String.valueOf(!fieldDescribe.isNillable()),
                    String.valueOf(fieldDescribe.isCreateable()),
                    String.valueOf(fieldDescribe.isUpdateable()),
                    String.valueOf(fieldDescribe.getLength()),
                    String.valueOf(fieldDescribe.getDefaultValue()),
                    String.valueOf(picklist)
                  });
                }
            }
              // Generate Excel content
               String csvData = '';
                for (List<String> row : excelData) {
                    csvData += String.join(row, ',') + '\n';
                }
                Blob excelBlob = Blob.valueOf(csvData);
              // Send an email with the Excel file as an attachment
              Messaging.SingleEmailMessage email = new Messaging.SingleEmailMessage();
              email.setSubject('Object Fields Excel File');
              email.setPlainTextBody('Please find the attached Excel file.');
              Messaging.EmailFileAttachment attachment = new Messaging.EmailFileAttachment();
              attachment.setFileName(objectName+'Fields.csv');
              attachment.setBody(excelBlob);email.setFileAttachments(new List<Messaging.EmailFileAttachment>{attachment});
              email.setToAddresses(new List<String>{'sriram@cccinfotech.com'});
              Messaging.sendEmail(new List<Messaging.SingleEmailMessage>{email});
